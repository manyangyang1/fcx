<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.fcbj.mapper.PCustomerTMapper">
    
    <resultMap type="PCustomerT" id="PCustomerTResult">
        <result property="rowId"    column="row_id"    />
        <result property="vipcode"    column="vipcode"    />
        <result property="customerType"    column="customer_type"    />
        <result property="customerName"    column="customer_name"    />
        <result property="credentialType"    column="credential_type"    />
        <result property="credentialNo"    column="credential_no"    />
        <result property="phone"    column="phone"    />
        <result property="zipcode"    column="zipcode"    />
        <result property="email"    column="email"    />
        <result property="address"    column="address"    />
        <result property="bankCode"    column="bank_code"    />
        <result property="bankAccount"    column="bank_account"    />
        <result property="legalPerson"    column="legal_person"    />
        <result property="industryCode"    column="industry_code"    />
        <result property="businessCode"    column="business_code"    />
        <result property="contacts"    column="contacts"    />
        <result property="contactsPhone"    column="contacts_phone"    />
    </resultMap>

    <sql id="selectPCustomerTVo">
        select row_id, vipcode, customer_type, customer_name, credential_type, credential_no, phone, zipcode, email, address, bank_code, bank_account, legal_person, industry_code, business_code, contacts, contacts_phone from p_customer_t
    </sql>

    <select id="selectPCustomerTList" parameterType="PCustomerT" resultMap="PCustomerTResult">
        <include refid="selectPCustomerTVo"/>
        <where>  
            <if test="vipcode != null  and vipcode != ''"> and vipcode = #{vipcode}</if>
            <if test="customerType != null  and customerType != ''"> and customer_type = #{customerType}</if>
            <if test="customerName != null  and customerName != ''"> and customer_name like concat(concat('%', #{customerName}), '%')</if>
            <if test="credentialType != null  and credentialType != ''"> and credential_type = #{credentialType}</if>
            <if test="credentialNo != null  and credentialNo != ''"> and credential_no = #{credentialNo}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="zipcode != null  and zipcode != ''"> and zipcode = #{zipcode}</if>
            <if test="email != null  and email != ''"> and email = #{email}</if>
            <if test="address != null  and address != ''"> and address = #{address}</if>
            <if test="bankCode != null  and bankCode != ''"> and bank_code = #{bankCode}</if>
            <if test="bankAccount != null  and bankAccount != ''"> and bank_account = #{bankAccount}</if>
            <if test="legalPerson != null  and legalPerson != ''"> and legal_person = #{legalPerson}</if>
            <if test="industryCode != null  and industryCode != ''"> and industry_code = #{industryCode}</if>
            <if test="businessCode != null  and businessCode != ''"> and business_code = #{businessCode}</if>
            <if test="contacts != null  and contacts != ''"> and contacts = #{contacts}</if>
            <if test="contactsPhone != null  and contactsPhone != ''"> and contacts_phone = #{contactsPhone}</if>
        </where>
    </select>
    
    <select id="selectPCustomerTByRowId" parameterType="String" resultMap="PCustomerTResult">
        <include refid="selectPCustomerTVo"/>
        where row_id = #{rowId}
    </select>
        
    <insert id="insertPCustomerT" parameterType="PCustomerT">
        <selectKey keyProperty="rowId" resultType="long" order="BEFORE">
            SELECT seq_p_customer_t.NEXTVAL as rowId FROM DUAL
        </selectKey>
        insert into p_customer_t
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="rowId != null">row_id,</if>
            <if test="vipcode != null">vipcode,</if>
            <if test="customerType != null and customerType != ''">customer_type,</if>
            <if test="customerName != null and customerName != ''">customer_name,</if>
            <if test="credentialType != null and credentialType != ''">credential_type,</if>
            <if test="credentialNo != null and credentialNo != ''">credential_no,</if>
            <if test="phone != null">phone,</if>
            <if test="zipcode != null">zipcode,</if>
            <if test="email != null">email,</if>
            <if test="address != null and address != ''">address,</if>
            <if test="bankCode != null">bank_code,</if>
            <if test="bankAccount != null">bank_account,</if>
            <if test="legalPerson != null">legal_person,</if>
            <if test="industryCode != null and industryCode != ''">industry_code,</if>
            <if test="businessCode != null and businessCode != ''">business_code,</if>
            <if test="contacts != null">contacts,</if>
            <if test="contactsPhone != null">contacts_phone,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="rowId != null">#{rowId},</if>
            <if test="vipcode != null">#{vipcode},</if>
            <if test="customerType != null and customerType != ''">#{customerType},</if>
            <if test="customerName != null and customerName != ''">#{customerName},</if>
            <if test="credentialType != null and credentialType != ''">#{credentialType},</if>
            <if test="credentialNo != null and credentialNo != ''">#{credentialNo},</if>
            <if test="phone != null">#{phone},</if>
            <if test="zipcode != null">#{zipcode},</if>
            <if test="email != null">#{email},</if>
            <if test="address != null and address != ''">#{address},</if>
            <if test="bankCode != null">#{bankCode},</if>
            <if test="bankAccount != null">#{bankAccount},</if>
            <if test="legalPerson != null">#{legalPerson},</if>
            <if test="industryCode != null and industryCode != ''">#{industryCode},</if>
            <if test="businessCode != null and businessCode != ''">#{businessCode},</if>
            <if test="contacts != null">#{contacts},</if>
            <if test="contactsPhone != null">#{contactsPhone},</if>
         </trim>
    </insert>

    <update id="updatePCustomerT" parameterType="PCustomerT">
        update p_customer_t
        <trim prefix="SET" suffixOverrides=",">
            <if test="vipcode != null">vipcode = #{vipcode},</if>
            <if test="customerType != null and customerType != ''">customer_type = #{customerType},</if>
            <if test="customerName != null and customerName != ''">customer_name = #{customerName},</if>
            <if test="credentialType != null and credentialType != ''">credential_type = #{credentialType},</if>
            <if test="credentialNo != null and credentialNo != ''">credential_no = #{credentialNo},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="zipcode != null">zipcode = #{zipcode},</if>
            <if test="email != null">email = #{email},</if>
            <if test="address != null and address != ''">address = #{address},</if>
            <if test="bankCode != null">bank_code = #{bankCode},</if>
            <if test="bankAccount != null">bank_account = #{bankAccount},</if>
            <if test="legalPerson != null">legal_person = #{legalPerson},</if>
            <if test="industryCode != null and industryCode != ''">industry_code = #{industryCode},</if>
            <if test="businessCode != null and businessCode != ''">business_code = #{businessCode},</if>
            <if test="contacts != null">contacts = #{contacts},</if>
            <if test="contactsPhone != null">contacts_phone = #{contactsPhone},</if>
        </trim>
        where row_id = #{rowId}
    </update>

    <delete id="deletePCustomerTByRowId" parameterType="String">
        delete from p_customer_t where row_id = #{rowId}
    </delete>

    <delete id="deletePCustomerTByRowIds" parameterType="String">
        delete from p_customer_t where row_id in 
        <foreach item="rowId" collection="array" open="(" separator="," close=")">
            #{rowId}
        </foreach>
    </delete>
</mapper>